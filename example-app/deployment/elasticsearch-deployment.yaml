apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: elasticsearch
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: elasticsearch
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/esnet: "true"
        io.kompose.service: elasticsearch
    spec:
      containers:
      - env:
        - name: ES_JAVA_OPTS
          value: -Xms1g -Xmx1g
        - name: bootstrap.memory_lock
          value: "true"
        - name: bootstrap.system_call_filter
          value: "false"
        - name: cluster.name
          value: elasticsearch
        - name: http.cors.allow-origin
          value: '*'
        - name: http.cors.enabled
          value: "true"
        - name: http.host
          value: 0.0.0.0
        - name: network.host
          value: 0.0.0.0
        - name: network.publish_host
          value: 0.0.0.0
        - name: node.name
          value: node_1
        - name: transport.host
          value: 0.0.0.0
        image: elasticsearch:2.4.6
        imagePullPolicy: ""
        name: elasticsearch
        ports:
        - containerPort: 9200
        - containerPort: 9300
        resources: {}
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: esdata1
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: esdata1
        persistentVolumeClaim:
          claimName: esdata1
status: {}
